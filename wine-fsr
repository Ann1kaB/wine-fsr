#!/bin/bash

FSR_ENABLE="WINE_FULLSCREEN_FSR=1"
MODE_PREFIX="WINE_FULLSCREEN_FSR_MODE"
STRENGTH_PREFIX="WINE_FULLSCREEN_FSR_STRENGTH"
CUSTOM_MODE_PREFIX="WINE_FULLSCREEN_FSR_CUSTOM_MODE"
PROG_NAME=$(basename $0)
CONFIG_FILE="$HOME/.config/${PROG_NAME}/${PROG_NAME}.conf"
PER_GAME_CONFIG_FILE="$HOME/.config/${PROG_NAME}/*.conf"

set_config_file_opts(){
	_strength="${STRENGTH_PREFIX}=$FSR_STRENGTH"
	_cmd="${MODE_PREFIX}=$FSR_RESOLUTION"
	if [ -n $CUSTOM_FSR_RESOLUTION ];then
		_cmd="${CUSTOM_MODE_PREFIX}=$CUSTOM_FSR_RESOLUTION"
	fi
}

if [[ "$@" == *"$PER_GAME_CONFIG_FILE"* ]];then
	source $PER_GAME_CONFIG_FILE
	set_config_file_opts
elif  [ -f $CONFIG_FILE ];then
	source $CONFIG_FILE
	set_config_file_opts
fi

get_resolution() {

	native_res=$(cat /sys/class/drm/*/modes | head -n1)
	native_width=$(echo $native_res | cut -d'x' -f1)
	native_height=$(echo $native_res | cut -d'x' -f2)

	ultra_scale_w=$(echo "$native_width/1.3" | bc)
	ultra_scale_h=$(echo "$native_height/1.3" | bc)
	quality_scale_w=$(echo "$native_width/1.5" | bc)
	quality_scale_h=$(echo "$native_height/1.5" | bc)
	balanced_scale_w=$(echo "$native_width/1.7" | bc)
	balanced_scale_h=$(echo "$native_height/1.7" | bc)
	performance_scale_w=$(echo "$native_width/2" | bc)
	performance_scale_h=$(echo "$native_height/2" | bc)


}

show_help(){
  get_resolution
  echo "Usage: $PROG_NAME [OPTION]...
Resolution options for AMD FSR:
  -h, --help		Show help message
  -u, --ultra		Ultra Quality, 1.3x scale: (${ultra_scale_w}x${ultra_scale_h})
  -q, --quality		Quality, 1.5x scale: (${quality_scale_w}x${quality_scale_h})
  -b, --balanced	Balanced, 1.7x scale: (${balanced_scale_w}x${balanced_scale_h})
  -p, --performance	Performance, 2x scale: (${performance_scale_w}x${performance_scale_h})
  -c, --custom		Set custom resolution mode.

Sharpness options for AMD FSR:
  0, Sharpest
  1, Sharper
  2, Sharp
  3, Soft
  4, Softer
  5, Softest"
}


case "$1" in
	"-q"|"--quality") _cmd="${MODE_PREFIX}=quality"; shift 1;;
	"-b"|"--balanced") _cmd="${MODE_PREFIX}=balanced"; shift 1;;
	"-p"|"--performance") _cmd="${MODE_PREFIX}=performance"; shift 1;;
	"-u"|"--ultra") _cmd="${MODE_PREFIX}=ultra"; shift 1;;
	"-c"|"--custom") _cmd=${CUSTOM_MODE_PREFIX}="$2"; shift 2;;
	"-c="*|"--custom="*) _cmd=${CUSTOM_MODE_PREFIX}="${1//[-custom=]/}"; shift 1;;
	"-h"|"--help") show_help; exit ;;
esac

case "$1" in
	"5") _strength="${STRENGTH_PREFIX}=5"; shift 1;;
	"4") _strength="${STRENGTH_PREFIX}=4"; shift 1;;
	"3") _strength="${STRENGTH_PREFIX}=3"; shift 1;;
	"1") _strength="${STRENGTH_PREFIX}=1"; shift 1;;
	"0") _strength="${STRENGTH_PREFIX}=0"; shift 1;;
	  *) [ -z $_strength ] && _strength="${STRENGTH_PREFIX}=2";;
esac



run_error() { echo "Invalid option -- '$inv_cmd'"; show_help; exit 1; }

if ! command -v $1 &> /dev/null || [[ "$PROG_NAME" = "$1" ]]; then
	inv_cmd=$1
	run_error
fi

export $_cmd 
export $_strength
export $FSR_ENABLE
echo "$_cmd
$_strength
$FSR_ENABLE"
#if [[ -n "$@" ]];then
  exec "$@"
#else
#  run_error
#fi
